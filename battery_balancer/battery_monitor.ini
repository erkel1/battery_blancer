; --------------------------------------------------------------------------------
; Battery Management System (BMS) Configuration File Documentation
; --------------------------------------------------------------------------------
; 
; **File Name:** battery_monitor.ini
; **Version:** 1.2 (As of August 24, 2025) - Added num_series_banks and sensors_per_bank for configurable config (e.g., NsXp).
; **Purpose:** Configures the bms.py script. Now includes settings for series banks and sensors per bank. Defaults if missing.
;
; **Detailed Overview for Non-Programmers:**
# - Settings file for BMS. Edit values to match your setup.
# - New: num_series_banks (e.g., 3 for 3s), sensors_per_bank (e.g., 8 for 8p per bank).
# - Total sensors = number_of_parallel_batteries * num_series_banks * sensors_per_bank.
# - Slave channels = num_series_banks * sensors_per_bank.
# - Other sections same.
;
# **How to Use:** Same as before.
;
# **Section Explanations:** Updated [Temp] with new keys.
;
# **Notes & Troubleshooting:**
# - Ensure slave addresses match hardware, unique.
# - If slave fails, alerted, uses fallbacks.
# - For 4p x 3s8p: number_of_parallel_batteries=4, num_series_banks=3, sensors_per_bank=8.
# 
# --------------------------------------------------------------------------------
# Configuration Begins Below - With Line-by-Line Comments
# --------------------------------------------------------------------------------

[Temp]
; Settings for temperature monitoring via NTC sensors and Modbus.
; ip: IP address of the Lantronix EDS4100 device (network address for sensor communication). Default: '192.168.15.240'.
ip = 192.168.15.240
; modbus_port: Network port for Modbus TCP (like a specific channel on the device). Default: 10001.
modbus_port = 10001
; poll_interval: Seconds between temperature checks (how often to read sensors). Default: 10.0.
poll_interval = 5.0
; rise_threshold: Max allowed temp increase per poll (°C). Default: 2.0.
rise_threshold = 2.0
; deviation_threshold: Max relative difference from bank average (10%). Default: 0.1.
deviation_threshold = 0.1
; disconnection_lag_threshold: How much a sensor can lag bank change (°C). Default: 0.5.
disconnection_lag_threshold = 0.5
; high_threshold: Too hot if above this (°C). Default: 42.0.
high_threshold = 42.0
; low_threshold: Too cold if below this (°C). Default: 0.0.
low_threshold = 0.0
; scaling_factor: Divides raw sensor data to get °C (sensor specific). Default: 100.0.
scaling_factor = 100.0
; valid_min: Below this = invalid/disconnected sensor. Default: 0.0.
valid_min = 0.0
; max_retries: Retry failed reads this many times. Default: 3.
max_retries = 3
; retry_backoff_base: Delay base for retries (1s, 2s, 4s...). Default: 1.
retry_backoff_base = 1
; query_delay: Wait seconds after sending sensor query. Default: 0.25.
query_delay = 0.25
; abs_deviation_threshold: Max absolute difference from bank average (°C). Default: 2.0.
abs_deviation_threshold = 2.0
; cabinet_over_temp_threshold: Cabinet too hot if median > this (°C) - fan on. Default: 35.0.
cabinet_over_temp_threshold = 35.0
; number_of_parallel_batteries: Number of batteries in parallel (each with num_series_banks * sensors_per_bank sensors). Default: 1.
number_of_parallel_batteries = 1
; modbus_slave_addresses: Comma-separated Modbus slave addresses for each parallel battery. Default: '1'.
modbus_slave_addresses = 1
; num_series_banks: Number of series banks (e.g., 3 for 3s). Default: 3.
num_series_banks = 3
; sensors_per_bank: Number of sensors (parallel cells) per series bank per battery. Default: 8.
sensors_per_bank = 8

[General]
; General system and balancing settings.
; NumberOfBatteries: Number of banks (fixed at 3 for 3sXp). Default: 3.
NumberOfBatteries = 3
; VoltageDifferenceToBalance: Balance if banks differ by more than this (V). Default: 0.1.
VoltageDifferenceToBalance = 0.5
; BalanceDurationSeconds: How long to balance each time (seconds). Default: 5.
BalanceDurationSeconds = 30
; SleepTimeBetweenChecks: Short wait in loop (seconds) - for responsiveness. Default: 0.1.
SleepTimeBetweenChecks = 0.1
; BalanceRestPeriodSeconds: Wait after balancing before next (seconds). Default: 60.
BalanceRestPeriodSeconds = 60
; LowVoltageThresholdPerBattery: Alert if bank below this (V). Default: 18.5.
LowVoltageThresholdPerBattery = 18.5
; HighVoltageThresholdPerBattery: Alert if bank above this (V). Default: 21.0.
HighVoltageThresholdPerBattery = 21.0
; EmailAlertIntervalSeconds: Min seconds between emails (1 hour). Default: 3600.
EmailAlertIntervalSeconds = 3600
; I2C_BusNumber: I2C bus on Pi (usually 1). Default: 1.
I2C_BusNumber = 1
; VoltageDividerRatio: Math factor to convert ADC reading to real voltage. Default: 0.01592.
VoltageDividerRatio = 0.01592
; LoggingLevel: Log detail: DEBUG (lots), INFO (key events), ERROR (problems). Default: 'INFO'.
LoggingLevel = INFO
; WebInterfaceEnabled: Turn on web dashboard (True/False). Default: True.
WebInterfaceEnabled = True
; StartupSelfTestEnabled: Run checks at start (True/False). Default: True.
StartupSelfTestEnabled = True
; WatchdogEnabled: Use hardware watchdog to prevent freezes (True/False). Default: True.
WatchdogEnabled = False

[I2C]
; Addresses for I2C devices (in hex, like 0x70).
; MultiplexerAddress: I2C switch address. Default: 0x70.
MultiplexerAddress = 0x70
; VoltageMeterAddress: ADC for voltages. Default: 0x49.
VoltageMeterAddress = 0x49
; RelayAddress: Relay controller. Default: 0x26.
RelayAddress = 0x26

[GPIO]
; Pi pin numbers for relays.
; DC_DC_RelayPin: Pin to control DC-DC converter. Default: 5.
DC_DC_RelayPin = 5
; AlarmRelayPin: Pin for alarm (buzzer/light). Default: 6.
AlarmRelayPin = 6
; FanRelayPin: Pin for cabinet fan. Default: 4.
FanRelayPin = 4

[Email]
; Settings for alert emails.
; SMTP_Server: Email server (Gmail). Default: 'smtp.gmail.com'.
SMTP_Server = smtp.gmail.com
; SMTP_Port: Server port. Default: 587.
SMTP_Port = 587
; SenderEmail: From address. Default: 'your_email@gmail.com'.
SenderEmail = your_email@gmail.com
; RecipientEmail: To address. Default: 'recipient@example.com'.
RecipientEmail = recipient@example.com
; SMTP_Username: Login user. Default: 'your_email@gmail.com'.
SMTP_Username = your_email@gmail.com
; SMTP_Password: App-specific password (not regular). Default: 'your_app_password'.
SMTP_Password = your_app_password

[ADC]
; Settings for voltage ADC (hex values).
; ConfigRegister: ADC config location. Default: 0x01.
ConfigRegister = 0x01
; ConversionRegister: Where to read values. Default: 0x00.
ConversionRegister = 0x00
; ContinuousModeConfig: Continuous reading mode. Default: 0x0100.
ContinuousModeConfig = 0x0100
; SampleRateConfig: How fast to sample. Default: 0x0080.
SampleRateConfig = 0x0080
; GainConfig: Sensitivity setting. Default: 0x0400.
GainConfig = 0x0400

[Calibration]
; Fine-tune voltage readings (close to 1.0).
; Sensor1_Calibration: For bank 1. Default: 0.99856.
Sensor1_Calibration = 0.99856
; Sensor2_Calibration: For bank 2. Default: 0.99856.
Sensor2_Calibration = 0.99856
; Sensor3_Calibration: For bank 3. Default: 0.99809.
Sensor3_Calibration = 0.99809

[Startup]
; Self-test settings.
; test_balance_duration: Balance time during test (seconds). Default: 15.
test_balance_duration = 15
; min_voltage_delta: Min voltage change to pass test (V). Default: 0.01.
min_voltage_delta = 0.01
; test_read_interval: Read interval during test (seconds). Default: 2.0.
test_read_interval = 2.0

[Web]
; Dashboard settings.
; host: Listen on all IPs. Default: '0.0.0.0'.
host = 0.0.0.0
; web_port: Port for web access. Default: 8080.
web_port = 8080
; auth_required: Require login (True/False). Default: False.
auth_required = False
; username: Web login user. Default: 'admin'.
username = admin
; password: Web login pass. Default: 'admin123'.
password = admin123
; api_enabled: Allow API calls. Default: True.
api_enabled = True
; cors_enabled: Allow cross-origin (for apps). Default: False.
cors_enabled = True
; cors_origins: Allowed origins (* = all). Default: '*'.
cors_origins = *