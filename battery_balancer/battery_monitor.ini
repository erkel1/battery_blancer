; Battery Monitor Configuration File (battery_monitor.ini)
; Updated as of August 22, 2025.
; This INI file configures the combined battery temperature monitoring and balancing script for a 3s8p battery system (3 series-connected parallel battery banks, each with 8 cells).
; It merges settings from the original balancer and temperature scripts, with temperature-specific params in [Temp] and shared/general in [General].
; Sections:
; - [Temp]: Settings for temperature monitoring via Modbus over TCP (Lantronix EDS4100 device with NTC sensors). Controls temperature reads, scaling, and anomaly detection.
; - [General]: Shared settings for balancing, polling, voltage thresholds, alarms, etc. Core system behavior.
; - [I2C]: Addresses for I2C devices (multiplexer, ADC, relays). Must match hardware setup.
; - [GPIO]: GPIO pins on Raspberry Pi for DC-DC converter and alarm relay control.
; - [Email]: SMTP email alert settings (throttled to prevent spam). Use app-specific passwords for Gmail.
; - [ADC]: ADS1115 ADC configuration registers (advanced; rarely change). Sets ADC operating mode.
; - [Calibration]: Per-sensor voltage calibration multipliers (tune based on measured vs actual).
; - [Startup]: Startup self-test parameters (balancer tests, durations, thresholds).
; - [Web]: Web interface settings (host, port, authentication). Enables remote monitoring.

; Usage Notes:
; - All values have fallbacks in the script, so missing keys use defaults (listed below). Ensures script runs with partial config.
; - Types: string (text), integer (whole number), float (decimal, e.g., 0.1). Incorrect types cause parsing errors—validate before use.
; - Thresholds: Tune for your battery type (e.g., LiFePO4: ~3.0-3.65V per cell, temps <60°C high, >0°C low). Exceeding thresholds triggers alerts, prevents balancing.
; - Temps: 24 channels (8 per bank), scaling_factor assumes raw * scaling = °C (e.g., 100 for 0.01°C units). Adjust per sensor output.
; - Voltages: 3 banks, divider ratio = R2/(R1+R2) from circuit. Calibration multipliers correct hardware variances.
; - Email: Use app-specific password for Gmail (2FA); test SMTP separately. Throttling prevents spam.
; - Logging: Set level in [General] (DEBUG for verbose, INFO default). Higher levels increase log size.
; - Changes require script restart; validate hardware matches (e.g., I2C addresses). Restart Pi or kill process to apply.
; - Script warns if NumberOfBatteries != 3 (hardcoded NUM_BANKS). Modify script for non-3 bank setups.
; - Web: Optional; enable auth for security. Expose carefully to avoid risks.

[Temp]
; IP address of the Lantronix EDS4100 device for Modbus TCP communication. Change to match your network setup.
ip = 192.168.15.240
; Port for Modbus TCP on the device. Default is 10001; ensure firewall allows this.
modbus_port = 10001
; Interval (in seconds) between temperature polls. Higher values reduce load but delay anomaly detection.
poll_interval = 10.0
; Threshold for abnormal temperature rise (°C) between polls. Tune based on expected heating rates.
rise_threshold = 2.0
; Relative deviation threshold from bank median (as percentage). Triggers if rel_dev > this.
deviation_threshold = 0.1
; Threshold for temperature lag from bank median rise (°C). Detects disconnected or faulty sensors.
disconnection_lag_threshold = 0.5
; High temperature alert threshold (°C). Above this triggers alerts and prevents balancing.
high_threshold = 60.0
; Low temperature alert threshold (°C). Below this triggers alerts.
low_threshold = 0.0
; Scaling factor for raw sensor data to °C (e.g., if raw is in 0.01°C units, set to 100).
scaling_factor = 100.0
; Minimum valid temperature reading (°C). Below this is considered invalid (e.g., disconnected sensor).
valid_min = 0.0
; Maximum retries for failed Modbus reads. Prevents infinite loops on network issues.
max_retries = 3
; Base for exponential backoff in retries (e.g., base=2: 1s, 2s, 4s). Default 1 is linear.
retry_backoff_base = 1
; Delay (seconds) after sending Modbus query before reading response. Adjust for device timing.
query_delay = 0.5
; Number of temperature channels (sensors). Hardcoded to 24 for 3 banks x 8 cells.
num_channels = 24
; Absolute deviation threshold from bank median (°C). Triggers if abs_dev > this, independent of relative.
abs_deviation_threshold = 2.0

[General]
; Number of battery banks (series-connected). Must be 3 for 3s8p; script warns otherwise.
NumberOfBatteries = 3
; Voltage difference (V) between max and min banks to trigger balancing. Too low may cause frequent unnecessary balances.
VoltageDifferenceToBalance = 0.1
; Duration (seconds) of each balancing cycle. Balance too long risks over-discharge.
BalanceDurationSeconds = 5
; Sleep time (seconds) between checks during operation. Affects polling frequency in main loop.
SleepTimeBetweenChecks = 0.1
; Rest period (seconds) after balancing before next possible cycle. Prevents continuous balancing.
BalanceRestPeriodSeconds = 60
; Low voltage alert threshold per bank (V). Below this triggers alert and alarm relay.
LowVoltageThresholdPerBattery = 18.5
; High voltage alert threshold per bank (V). Above this triggers alert.
HighVoltageThresholdPerBattery = 21.0
; Interval (seconds) between email alerts to prevent spam. Set higher for fewer emails.
EmailAlertIntervalSeconds = 3600
; I2C bus number on Raspberry Pi (usually 1).
I2C_BusNumber = 1
; Voltage divider ratio from hardware circuit (R2/(R1+R2)). Critical for accurate voltage calculation.
VoltageDividerRatio = 0.01592
; Logging level (DEBUG, INFO, WARNING, ERROR). DEBUG is verbose; INFO is default.
LoggingLevel = INFO
; Enable web interface for remote access (true/false). Disable for security if not needed.
WebInterfaceEnabled = true
; Enable startup self-test (true/false). Recommended for initial setup.
StartupSelfTestEnabled = true

[I2C]
; I2C address of the multiplexer (TCA9548A or similar) for channel selection. Hex format.
MultiplexerAddress = 0x70
; I2C address of the ADS1115 ADC for voltage measurements.
VoltageMeterAddress = 0x49
; I2C address of the relay module for balancing control.
RelayAddress = 0x53

[GPIO]
; GPIO pin for controlling the DC-DC converter relay (BCM numbering).
DC_DC_RelayPin = 17
; GPIO pin for the alarm relay (activates on alerts).
AlarmRelayPin = 27

[Email]
; SMTP server for email alerts (e.g., smtp.gmail.com for Gmail).
SMTP_Server = smtp.gmail.com
; SMTP port (587 for TLS).
SMTP_Port = 587
; Sender email address.
SenderEmail = your_email@gmail.com
; Recipient email for alerts.
RecipientEmail = recipient@example.com
; SMTP username (usually same as sender).
SMTP_Username = your_email@gmail.com
; SMTP password (use app-specific for security).
SMTP_Password = your_app_password

[ADC]
; ADS1115 config register address.
ConfigRegister = 0x01
; ADS1115 conversion register address.
ConversionRegister = 0x00
; Bitmask for continuous mode.
ContinuousModeConfig = 0x0100
; Bitmask for sample rate (e.g., 0x0080 = 128 SPS).
SampleRateConfig = 0x0080
; Bitmask for gain (e.g., 0x0400 = ±1.024V).
GainConfig = 0x0400

[Calibration]
; Calibration multiplier for sensor 1 (bank 1 voltage). Adjust based on multimeter vs script readings.
Sensor1_Calibration = 0.99856
; Calibration for sensor 2 (bank 2).
Sensor2_Calibration = 0.99856
; Calibration for sensor 3 (bank 3).
Sensor3_Calibration = 0.99809

[Startup]
; Duration (seconds) for balancer test during startup.
test_balance_duration = 15
; Minimum voltage change (V) expected during balancer test to pass.
min_voltage_delta = 0.01
; Interval (seconds) between voltage reads during test.
test_read_interval = 2

[Web]
; Host IP for web server (0.0.0.0 for all interfaces).
host = 0.0.0.0
; Port for web server (default 8080).
web_port = 8080
; Require authentication for web access (true/false). Strongly recommend true for security.
auth_required = false
; Web username (change from default).
username = admin
; Web password (change from default; use strong).
password = admin123
; Enable API endpoints (true/false).
api_enabled = true
; Enable CORS for cross-origin requests (true/false). Disable if not needed.
cors_enabled = true
; Allowed CORS origins (* for all; restrict for security).
cors_origins = *